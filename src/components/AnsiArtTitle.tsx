interface AnsiArtTitleProps {
  text: string;
}

export function AnsiArtTitle({ text }: AnsiArtTitleProps) {
  // 清晰立体ASCII字体映射 - 紧凑版本
  const reliefAsciiFont: { [key: string]: string[] } = {
    'A': [
      ' ██████ ',
      '████████',
      '██    ██',
      '████████',
      '██    ██'
    ],
    'B': [
      '████████',
      '██    ██',
      '████████',
      '██    ██',
      '████████'
    ],
    'C': [
      ' ███████',
      '████    ',
      '████    ',
      '████    ',
      ' ███████'
    ],
    'D': [
      '████████',
      '██    ██',
      '██    ██',
      '██    ██',
      '████████'
    ],
    'E': [
      '████████',
      '████    ',
      '████████',
      '████    ',
      '████████'
    ],
    'F': [
      '████████',
      '████    ',
      '████████',
      '████    ',
      '████    '
    ],
    'G': [
      ' ███████',
      '████    ',
      '████ ███',
      '██    ██',
      ' ███████'
    ],
    'H': [
      '██    ██',
      '██    ██',
      '████████',
      '██    ██',
      '██    ██'
    ],
    'I': [
      '████████',
      '   ██   ',
      '   ██   ',
      '   ██   ',
      '████████'
    ],
    'J': [
      '████████',
      '      ██',
      '      ██',
      '██    ██',
      ' ███████'
    ],
    'K': [
      '██    ██',
      '██  ████',
      '██████  ',
      '██  ████',
      '██    ██'
    ],
    'L': [
      '████    ',
      '████    ',
      '████    ',
      '████    ',
      '████████'
    ],
    'M': [
      '████████',
      '████████',
      '██  ████',
      '██  ████',
      '██    ██'
    ],
    'N': [
      '██    ██',
      '████  ██',
      '██ █████',
      '██  ████',
      '██    ██'
    ],
    'O': [
      ' ███████',
      '██    ██',
      '██    ██',
      '██    ██',
      ' ███████'
    ],
    'P': [
      '████████',
      '██    ██',
      '████████',
      '████    ',
      '████    '
    ],
    'Q': [
      ' ███████',
      '██    ██',
      '██  ████',
      '██    ██',
      ' ████████'
    ],
    'R': [
      '████████',
      '██    ██',
      '████████',
      '██    ██',
      '██    ██'
    ],
    'S': [
      ' ███████',
      '████    ',
      ' ███████',
      '      ██',
      '████████'
    ],
    'T': [
      '████████',
      '   ██   ',
      '   ██   ',
      '   ██   ',
      '   ██   '
    ],
    'U': [
      '██    ██',
      '██    ██',
      '██    ██',
      '██    ██',
      ' ███████'
    ],
    'V': [
      '██    ██',
      '██    ██',
      ' ██  ██ ',
      '  ████  ',
      '   ██   '
    ],
    'W': [
      '██    ██',
      '██  ████',
      '██████████',
      '████████',
      '████████'
    ],
    'X': [
      '██    ██',
      ' ██  ██ ',
      '  ████  ',
      ' ██  ██ ',
      '██    ██'
    ],
    'Y': [
      '██    ██',
      ' ██  ██ ',
      '  ████  ',
      '   ██   ',
      '   ██   '
    ],
    'Z': [
      '████████',
      '    ████',
      '  ████  ',
      '████    ',
      '████████'
    ],
    ' ': [
      '     ',
      '     ',
      '     ',
      '     ',
      '     '
    ]
  };

  // 生成立体浮雕ANSI Art
  const generateReliefAnsiArt = (text: string): string[] => {
    const upperText = text.toUpperCase();
    const lines = ['', '', '', '', ''];
    
    for (const char of upperText) {
      const charPattern = reliefAsciiFont[char] || reliefAsciiFont[' '];
      for (let i = 0; i < 5; i++) {
        lines[i] += charPattern[i] + ' '; // 减少字符间距
      }
    }
    
    return lines;
  };

  const ansiLines = generateReliefAnsiArt(text);

  return (
    <div className="ansi-art-relief">
      <pre className="text-xs md:text-sm lg:text-base font-mono leading-none tracking-normal overflow-x-auto whitespace-nowrap">
        {ansiLines.map((line, index) => (
          <div key={index}>{line}</div>
        ))}
      </pre>
    </div>
  );
}